var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { Translation } from './translation';
/**
 * Extend this class in components to provide 'lang', 'defaultLocale' & 'currency' to the translate and locale pipes.
 */
export var Localization = (function (_super) {
    __extends(Localization, _super);
    /**
     * @param {?} locale
     * @param {?} translation
     * @param {?=} changeDetectorRef
     */
    function Localization(locale, translation, changeDetectorRef) {
        var _this = this;
        _super.call(this, translation, changeDetectorRef);
        this.locale = locale;
        this.translation = translation;
        this.changeDetectorRef = changeDetectorRef;
        this.defaultLocale = this.locale.getDefaultLocale();
        // When the default locale changes, subscribes to the event & updates defaultLocale property.
        this.locale.defaultLocaleChanged.subscribe(function (defaultLocale) {
            _this.defaultLocale = defaultLocale;
            // OnPush Change Detection strategy.
            if (_this.changeDetectorRef) {
                _this.changeDetectorRef.markForCheck();
            }
            ;
        });
        this.currency = this.locale.getCurrentCurrency();
        // When the currency changes, subscribes to the event & updates currency property.
        this.locale.currencyCodeChanged.subscribe(function (currency) {
            _this.currency = currency;
            // OnPush Change Detection strategy.
            if (_this.changeDetectorRef) {
                _this.changeDetectorRef.markForCheck();
            }
            ;
        });
    }
    return Localization;
}(Translation));
function Localization_tsickle_Closure_declarations() {
    /** @type {?} */
    Localization.prototype.defaultLocale;
    /** @type {?} */
    Localization.prototype.currency;
    /** @type {?} */
    Localization.prototype.locale;
    /** @type {?} */
    Localization.prototype.translation;
    /** @type {?} */
    Localization.prototype.changeDetectorRef;
}
//# sourceMappingURL=localization.js.map