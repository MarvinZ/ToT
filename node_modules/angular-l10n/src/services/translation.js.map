{"version":3,"file":"translation.js","sourceRoot":"","sources":["../../../src/services/translation.ts"],"names":[],"mappings":"AAGA;;GAEG;AACH;IAEA;;;OAGG;IACH,qBACO,WAA+B,EAC/B,iBAAqC;QAR5C,iBAqBC;QAdM,gBAAW,GAAX,WAAW,CAAoB;QAC/B,sBAAiB,GAAjB,iBAAiB,CAAoB;QAEpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QAC3C,8EAA8E;QAC9E,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CACzC,UAAC,QAAgB;YACb,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;YACrB,oCAAoC;YACpC,EAAE,CAAC,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAAC,KAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;YAAC,CAAC;YAAA,CAAC;QAC3E,CAAC,CACJ,CAAC;IACN,CAAC;IAEL,kBAAC;AAAD,CAAC,AArBD,IAqBC;AAED;IACA,gBAAgB;IAChB,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC;IAC3B,gBAAgB;IAChB,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC;IAClC,gBAAgB;IAChB,WAAW,CAAC,SAAS,CAAC,iBAAiB,CAAC;AACxC,CAAC","sourcesContent":["import { ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { TranslationService } from './translation.service';\n/**\n * Extend this class in components to provide 'lang' to the 'translate' pipe.\n */\nexport class Translation {\npublic lang: string;\n/**\n * @param {?} translation\n * @param {?=} changeDetectorRef\n */\nconstructor(\npublic translation: TranslationService,\npublic changeDetectorRef?: ChangeDetectorRef\r\n    ) {\r\n        this.lang = this.translation.getLanguage();\r\n        // When the language changes, subscribes to the event & updates lang property.\r\n        this.translation.translationChanged.subscribe(\r\n            (language: string) => {\r\n                this.lang = language;\r\n                // OnPush Change Detection strategy.\r\n                if (this.changeDetectorRef) { this.changeDetectorRef.markForCheck(); };\r\n            }\r\n        );\r\n    }\r\n\r\n}\n\nfunction Translation_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslation.prototype.lang;\n/** @type {?} */\nTranslation.prototype.translation;\n/** @type {?} */\nTranslation.prototype.changeDetectorRef;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}