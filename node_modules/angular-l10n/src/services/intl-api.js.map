{"version":3,"file":"intl-api.js","sourceRoot":"","sources":["../../../src/services/intl-api.ts"],"names":[],"mappings":"AACA;;GAEG;AACH;IAAA;IAuBA,CAAC;IAtBD;;OAEG;IACW,yBAAiB,GAA/B;QACQ,IAAI,gBAAgB,CAAC,OAAO,GAAY,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC;QAC3E,MAAM,CAAC,OAAO,IAAI,IAAI,CAAE,cAAc,CAAE,gBAAgB,CAAC,CAAC;IAC9D,CAAC;IACL;;OAEG;IACW,uBAAe,GAA7B;QACQ,IAAI,gBAAgB,CAAC,OAAO,GAAY,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC;QAC3E,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAE,cAAc,CAAC,CAAC;IAC3D,CAAC;IACL;;OAEG;IACW,mBAAW,GAAzB;QACQ,IAAI,gBAAgB,CAAC,OAAO,GAAY,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC;QAC3E,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAE,UAAU,CAAC,CAAC;IACvD,CAAC;IAEL,cAAC;AAAD,CAAC,AAvBD,IAuBC","sourcesContent":["\n/**\n * Provides the methods to check if Intl APIs are supported.\n */\nexport class IntlAPI {\n/**\n * @return {?}\n */\npublic static HasDateTimeFormat(): boolean {\r\n        let /** @type {?} */ hasIntl: boolean = (Intl && typeof Intl === \"object\");\r\n        return hasIntl && Intl​.hasOwnProperty​(\"DateTimeFormat\");\r\n    }\n/**\n * @return {?}\n */\npublic static HasNumberFormat(): boolean {\r\n        let /** @type {?} */ hasIntl: boolean = (Intl && typeof Intl === \"object\");\r\n        return hasIntl && Intl.hasOwnProperty​(\"NumberFormat\");\r\n    }\n/**\n * @return {?}\n */\npublic static HasCollator(): boolean {\r\n        let /** @type {?} */ hasIntl: boolean = (Intl && typeof Intl === \"object\");\r\n        return hasIntl && Intl.hasOwnProperty​(\"Collator\");\r\n    }\r\n\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}