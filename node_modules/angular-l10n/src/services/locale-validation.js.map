{"version":3,"file":"locale-validation.js","sourceRoot":"","sources":["../../../src/services/locale-validation.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;OAEnC,EAAE,aAAa,EAAE,MAAM,4BAA4B;OACnD,EAAE,WAAW,EAAE,MAAM,mCAAmC;AAC/D;;GAEG;AACH;IACA;;OAEG;IACH,0BAAmB,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAC7C;;;;;OAKG;IACI,sCAAW,GAAlB,UAAmB,CAAS;QACpB,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACV,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,IAAI,gBAAgB,CAAC,WAAW,GAAgB,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAChG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;IAEE,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,aAAa,GAAG;KACtB,EAF6F,CAE7F,CAAC;IACF,uBAAC;AAAD,CAAC,AA1BD,IA0BC;AAED;IACA,gBAAgB;IAChB,gBAAgB,CAAC,UAAU,CAAC;IAC5B;;;OAGG;IACH,gBAAgB,CAAC,cAAc,CAAC;IAChC,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC;AAClC,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { LocaleService } from '../services/locale.service';\r\nimport { DecimalCode } from '../models/validation/decimal-code';\n/**\n * Provides the methods to convert strings according to default locale.\n */\nexport class LocaleValidation {\n/**\n * @param {?} locale\n */\nconstructor(public locale: LocaleService) { }\n/**\n * Converts a string to a number according to default locale.\rIf the string cannot be converted to a number, returns NaN.\n * @param {?} s\n * @return {?}\n */\npublic parseNumber(s: string): number {\r\n        if (s == \"\") {\r\n            return null;\r\n        }\r\n        let /** @type {?} */ decimalCode: DecimalCode = new DecimalCode(this.locale.getDefaultLocale());\r\n        return decimalCode.parse(s);\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocaleService, },\n];\n}\n\nfunction LocaleValidation_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleValidation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleValidation.ctorParameters;\n/** @type {?} */\nLocaleValidation.prototype.locale;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}