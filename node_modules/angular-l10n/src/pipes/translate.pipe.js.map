{"version":3,"file":"translate.pipe.js","sourceRoot":"","sources":["../../../src/pipes/translate.pipe.ts"],"names":[],"mappings":"OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe;OAE5C,EAAE,kBAAkB,EAAE,MAAM,iCAAiC;OAC7D,EAAE,YAAY,EAAE,MAAM,qCAAqC;AAClE;IACA;;OAEG;IACH,uBAAmB,WAA+B;QAA/B,gBAAW,GAAX,WAAW,CAAoB;IAAI,CAAC;IACvD;;;;;OAKG;IACI,iCAAS,GAAhB,UAAiB,GAAW,EAAE,IAAY;QAAE,cAAc;aAAd,WAAc,CAAd,sBAAc,CAAd,IAAc;YAAd,6BAAc;;QAClD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;YACxD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1D,CAAC;QACD,wDAAwD;QACxD,MAAM,CAAC,EAAE,CAAC;IACd,CAAC;IAEE,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACjB,IAAI,EAAE,WAAW;oBACjB,IAAI,EAAE,IAAI;iBACb,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,4BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,kBAAkB,GAAG;KAC3B,EAF6F,CAE7F,CAAC;IACF,oBAAC;AAAD,CAAC,AA7BD,IA6BC;AAED;IACA,gBAAgB;IAChB,aAAa,CAAC,UAAU,CAAC;IACzB;;;OAGG;IACH,aAAa,CAAC,cAAc,CAAC;IAC7B,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC;AACpC,CAAC","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\nimport { TranslationService } from '../services/translation.service';\nimport { ServiceState } from '../models/translation/service-state';\nexport class TranslatePipe implements PipeTransform {\n/**\n * @param {?} translation\n */\nconstructor(public translation: TranslationService) { }\n/**\n * @param {?} key\n * @param {?} lang\n * @param {...?} args\n * @return {?}\n */\npublic transform(key: string, lang: string, ...args: any[]): string {\n        if (this.translation.serviceState == ServiceState.isReady) {\n            return this.translation.translate(key, args[0], lang);\n        }\n        // If the service is not ready, returns an empty string.\n        return \"\";\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'translate',\n    pure: true\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TranslationService, },\n];\n}\n\nfunction TranslatePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTranslatePipe.ctorParameters;\n/** @type {?} */\nTranslatePipe.prototype.translation;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}