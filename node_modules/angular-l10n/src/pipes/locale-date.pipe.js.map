{"version":3,"file":"locale-date.pipe.js","sourceRoot":"","sources":["../../../src/pipes/locale-date.pipe.ts"],"names":[],"mappings":"OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe;OAC5C,EAAE,QAAQ,EAAE,MAAM,iBAAiB;OAEnC,EAAE,OAAO,EAAE,MAAM,sBAAsB;AAC9C;IAAA;IAyBA,CAAC;IAxBD;;;;;OAKG;IACI,kCAAS,GAAhB,UAAiB,KAAU,EAAE,aAAqB,EAAE,OAA8B;QAA9B,uBAA8B,GAA9B,sBAA8B;QAC1E,EAAE,CAAC,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;YAC9B,IAAI,gBAAgB,CAAC,UAAU,GAAa,IAAI,QAAQ,CAAC,aAAa,CAAC,CAAC;YACxE,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAChD,CAAC;QACD,yCAAyC;QACzC,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEE,yBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACjB,IAAI,EAAE,YAAY;oBAClB,IAAI,EAAE,IAAI;iBACb,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,qBAAC;AAAD,CAAC,AAzBD,IAyBC;AAED;IACA,gBAAgB;IAChB,cAAc,CAAC,UAAU,CAAC;IAC1B;;;OAGG;IACH,cAAc,CAAC,cAAc,CAAC;AAC9B,CAAC","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { IntlAPI } from '../services/intl-api';\nexport class LocaleDatePipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} defaultLocale\n * @param {?=} pattern\n * @return {?}\n */\npublic transform(value: any, defaultLocale: string, pattern: string = 'mediumDate'): string {\n        if (IntlAPI.HasDateTimeFormat()) {\n            let /** @type {?} */ localeDate: DatePipe = new DatePipe(defaultLocale);\n            return localeDate.transform(value, pattern);\n        }\n        // Returns the date without localization.\n        return value;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'localeDate',\n    pure: true\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LocaleDatePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleDatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocaleDatePipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}