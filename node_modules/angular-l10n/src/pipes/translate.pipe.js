import { Pipe } from '@angular/core';
import { TranslationService } from '../services/translation.service';
import { ServiceState } from '../models/translation/service-state';
export var TranslatePipe = (function () {
    /**
     * @param {?} translation
     */
    function TranslatePipe(translation) {
        this.translation = translation;
    }
    /**
     * @param {?} key
     * @param {?} lang
     * @param {...?} args
     * @return {?}
     */
    TranslatePipe.prototype.transform = function (key, lang) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        if (this.translation.serviceState == ServiceState.isReady) {
            return this.translation.translate(key, args[0], lang);
        }
        // If the service is not ready, returns an empty string.
        return "";
    };
    TranslatePipe.decorators = [
        { type: Pipe, args: [{
                    name: 'translate',
                    pure: true
                },] },
    ];
    /** @nocollapse */
    TranslatePipe.ctorParameters = function () { return [
        { type: TranslationService, },
    ]; };
    return TranslatePipe;
}());
function TranslatePipe_tsickle_Closure_declarations() {
    /** @type {?} */
    TranslatePipe.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    TranslatePipe.ctorParameters;
    /** @type {?} */
    TranslatePipe.prototype.translation;
}
//# sourceMappingURL=translate.pipe.js.map