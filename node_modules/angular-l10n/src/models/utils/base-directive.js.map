{"version":3,"file":"base-directive.js","sourceRoot":"","sources":["../../../../src/models/utils/base-directive.ts"],"names":[],"mappings":"OAEO,EAAE,GAAG,EAAE,MAAM,OAAO;AAC3B;;GAEG;AACH;IAOA;;;OAGG;IACH,uBAAsB,EAAc,EAAY,QAAkB;QAA5C,OAAE,GAAF,EAAE,CAAY;QAAY,aAAQ,GAAR,QAAQ,CAAU;QAL1D,uBAAkB,GAAQ,IAAI,GAAG,EAAE,CAAC;IAK0B,CAAC;IACvE;;OAEG;IACI,uCAAe,GAAtB;QACQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,GAAmB,CAAW,IAAI,CAAC,UAAU,CAAC,SAAU,CAAC,GAAG,IAAI,CAAC;QAEzG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAClD,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC;IACL,CAAC;;IACL;;;OAGG;IACH,6BAAK,GAAL,cAAS,CAAC;IACV;;;OAGG;IACH,+BAAO,GAAP,cAAW,CAAC;IACZ;;;OAGG;IACO,+BAAO,GAAjB,UAAkB,KAAa;QACvB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;QACpF,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QACpE,CAAC;IACL,CAAC;IACL;;OAEG;IACK,+BAAO,GAAf;QACQ,MAAM,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;IACjE,CAAC;IAEL,oBAAC;AAAD,CAAC,AA1DD,IA0DC;AAED;IACA,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC;IAC5B,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC;IAChC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC;IACnC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC;IAClC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,kBAAkB,CAAC;IAC3C,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC;IAC3B,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC;AACjC,CAAC","sourcesContent":["import { ElementRef, Renderer, AfterViewInit } from '@angular/core';\r\n\r\nimport { BFS } from './bfs';\n/**\n * @abstract\n */\nexport abstract class BaseDirective implements AfterViewInit {\r\n\r\n    protected key: string;\nprivate element: any;\nprivate renderNode: any;\nprivate nodeValue: any;\nprivate breadthFirstSearch: BFS = new BFS();\n/**\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(protected el: ElementRef, protected renderer: Renderer) { }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\r\n        this.element = this.el.nativeElement;\r\n        this.renderNode = this.breadthFirstSearch.getTargetNode(this.element);\r\n        this.nodeValue = this.renderNode != null ? /** @type {?} */(( <string>this.renderNode.nodeValue)) : null;\r\n\r\n        if (this.element.hasChildNodes()) {\r\n            this.key = this.getText();\r\n        } else if (this.element.hasAttribute(\"value\")) {\r\n            this.key = this.element.getAttribute(\"value\");\r\n        }\r\n\r\n        if (!!this.key) {\r\n            this.setup();\r\n        }\r\n    };\n/**\n * @abstract\n * @return {?}\n */\nsetup() {}\n/**\n * @abstract\n * @return {?}\n */\nreplace() {}\n/**\n * @param {?} value\n * @return {?}\n */\nprotected setText(value: string): void {\r\n        if (!!this.nodeValue) {\r\n            this.renderer.setText(this.renderNode, this.nodeValue.replace(this.key, value));\r\n        } else if (this.element.hasAttribute(\"value\")) {\r\n            this.renderer.setElementAttribute(this.element, \"value\", value);\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprivate getText(): string {\r\n        return this.nodeValue != null ? this.nodeValue.trim() : null;\r\n    }\r\n\r\n}\n\nfunction BaseDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseDirective.prototype.key;\n/** @type {?} */\nBaseDirective.prototype.element;\n/** @type {?} */\nBaseDirective.prototype.renderNode;\n/** @type {?} */\nBaseDirective.prototype.nodeValue;\n/** @type {?} */\nBaseDirective.prototype.breadthFirstSearch;\n/** @type {?} */\nBaseDirective.prototype.el;\n/** @type {?} */\nBaseDirective.prototype.renderer;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}