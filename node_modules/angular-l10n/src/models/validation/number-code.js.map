{"version":3,"file":"number-code.js","sourceRoot":"","sources":["../../../../src/models/validation/number-code.ts"],"names":[],"mappings":"OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB;AACjD;;;GAGG;AACH;IAEA;;OAEG;IACH,oBAAmB,aAAqB;QAArB,kBAAa,GAAb,aAAa,CAAQ;QAJjC,iBAAY,GAAa,EAAE,CAAC;QAK3B,GAAG,CAAC,CAAC,IAAI,GAAG,GAAW,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;YACxC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACzD,CAAC;QAED,mEAAmE;QACnE,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YAC5B,GAAG,CAAC,CAAC,IAAI,GAAG,GAAW,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;gBACxC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CACjC,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CACnD,CAAC;YACN,CAAC;QACL,CAAC;IACL,CAAC;IACL;;;;OAIG;IACH,0BAAK,GAAL,UAAM,CAAS,IAAG,CAAC;IACnB;;;OAGG;IACI,kCAAa,GAApB,UAAqB,OAAe;QAC5B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,UAAC,KAAa;YACpD,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IACP,CAAC;IACL;;;OAGG;IACO,4BAAO,GAAjB,UAAkB,CAAS;QACnB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;IACL;;;OAGG;IACO,8BAAS,GAAnB,UAAoB,KAAa;QACzB,IAAI,gBAAgB,CAAC,GAAG,GAAW,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QACpE,gBAAgB;QAChB,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;QAC7C,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IAEL,iBAAC;AAAD,CAAC,AApDD,IAoDC;AAED;IACA;;;OAGG;IACH,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC;IAClC,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC;AACnC,CAAC","sourcesContent":["import { IntlAPI } from '../../services/intl-api';\n/**\n * Converts numbers to Unicode according to default locale.\n * @abstract\n */\nexport abstract class NumberCode {\npublic numbersCodes: string[] = [];\n/**\n * @param {?} defaultLocale\n */\nconstructor(public defaultLocale: string) {\r\n        for (let num: number = 0; num <= 9; num++) {\r\n            this.numbersCodes.push(this.Unicode(num.toString()));\r\n        }\r\n\r\n        // Tries to update Unicode for numbers according to default locale.\r\n        if (IntlAPI.HasNumberFormat()) {\r\n            for (let num: number = 0; num <= 9; num++) {\r\n                this.numbersCodes[num] = this.Unicode(\r\n                    new Intl.NumberFormat(defaultLocale).format(num)\r\n                );\r\n            }\r\n        }\r\n    }\n/**\n * @abstract\n * @param {?} s\n * @return {?}\n */\nparse(s: string) {}\n/**\n * @param {?} pattern\n * @return {?}\n */\npublic UnicodeToChar(pattern: string): string {\r\n        return pattern.replace(/\\\\u[\\dA-F]{4}/gi, (match: string) => {\r\n            return String.fromCharCode(parseInt(match.replace(/\\\\u/g, \"\"), 16));\r\n        });\r\n    }\n/**\n * @param {?} c\n * @return {?}\n */\nprotected Unicode(c: string): string {\r\n        return \"\\\\u\" + this.HexEncode(c.charCodeAt(0));\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprotected HexEncode(value: number): string {\r\n        let /** @type {?} */ hex: string = value.toString(16).toUpperCase();\r\n        // With padding.\r\n        hex = \"0000\".substr(0, 4 - hex.length) + hex;\r\n        return hex;\r\n    }\r\n\r\n}\n\nfunction NumberCode_tsickle_Closure_declarations() {\n/**\n * Unicode for numbers from 0 to 9.\n * @type {?}\n */\nNumberCode.prototype.numbersCodes;\n/** @type {?} */\nNumberCode.prototype.defaultLocale;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}