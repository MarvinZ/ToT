import { IntlAPI } from '../../services/intl-api';
/**
 * Converts numbers to Unicode according to default locale.
 * @abstract
 */
export var NumberCode = (function () {
    /**
     * @param {?} defaultLocale
     */
    function NumberCode(defaultLocale) {
        this.defaultLocale = defaultLocale;
        this.numbersCodes = [];
        for (var num = 0; num <= 9; num++) {
            this.numbersCodes.push(this.Unicode(num.toString()));
        }
        // Tries to update Unicode for numbers according to default locale.
        if (IntlAPI.HasNumberFormat()) {
            for (var num = 0; num <= 9; num++) {
                this.numbersCodes[num] = this.Unicode(new Intl.NumberFormat(defaultLocale).format(num));
            }
        }
    }
    /**
     * @abstract
     * @param {?} s
     * @return {?}
     */
    NumberCode.prototype.parse = function (s) { };
    /**
     * @param {?} pattern
     * @return {?}
     */
    NumberCode.prototype.UnicodeToChar = function (pattern) {
        return pattern.replace(/\\u[\dA-F]{4}/gi, function (match) {
            return String.fromCharCode(parseInt(match.replace(/\\u/g, ""), 16));
        });
    };
    /**
     * @param {?} c
     * @return {?}
     */
    NumberCode.prototype.Unicode = function (c) {
        return "\\u" + this.HexEncode(c.charCodeAt(0));
    };
    /**
     * @param {?} value
     * @return {?}
     */
    NumberCode.prototype.HexEncode = function (value) {
        var /** @type {?} */ hex = value.toString(16).toUpperCase();
        // With padding.
        hex = "0000".substr(0, 4 - hex.length) + hex;
        return hex;
    };
    return NumberCode;
}());
function NumberCode_tsickle_Closure_declarations() {
    /**
     * Unicode for numbers from 0 to 9.
     * @type {?}
     */
    NumberCode.prototype.numbersCodes;
    /** @type {?} */
    NumberCode.prototype.defaultLocale;
}
//# sourceMappingURL=number-code.js.map