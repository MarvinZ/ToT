{"version":3,"file":"locale-config.js","sourceRoot":"","sources":["../../../../src/models/localization/locale-config.ts"],"names":[],"mappings":"AAEA;IACA;;OAEG;IACH,sBAAoB,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAC9C;;;;;;;OAOG;IACI,kCAAW,GAAlB,UAAmB,YAAoB,EAAE,aAA6B;QAA7B,6BAA6B,GAA7B,qBAA6B;QAC9D,IAAI,gBAAgB,CAAC,QAAQ,GAAa,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC;QAC3F,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;;;OAKG;IACI,mCAAY,GAAnB,UAAoB,aAAuB;QACnC,GAAG,CAAC,CAAsC,UAAa,EAAb,+BAAa,EAAb,2BAAa,EAAb,IAAa,CAAC;YAAnD,IAAqB,YAAY,sBAAA;YAClC,IAAI,gBAAgB,CAAC,QAAQ,GAAa,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YACnF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC1D;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;OAGG;IACI,qCAAc,GAArB;QACQ,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,GAAG,IAAI,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;;OAIG;IACI,0CAAmB,GAA1B,UAA2B,IAAmB;QAAnB,oBAAmB,GAAnB,WAAmB;QACtC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,GAAG,IAAI,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;OAGG;IACI,sCAAe,GAAtB;QACQ,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;;;;;;OAQG;IACI,qCAAc,GAArB,UAAsB,YAAoB;QAClC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,GAAG,YAAY,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;;;;;;;;;;;OAaG;IACI,0CAAmB,GAA1B,UACQ,YAAoB,EACpB,WAAmB,EACnB,UAAmB,EACnB,eAAwB,EACxB,QAAiB;QAEjB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,GAAG,YAAY,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,GAAG,WAAW,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,GAAG,UAAU,CAAC;QAClD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,GAAG,eAAe,CAAC;QAC5D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;;;OAKG;IACI,qCAAc,GAArB,UAAsB,YAAoB;QAClC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,GAAG,YAAY,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEL,mBAAC;AAAD,CAAC,AA5GD,IA4GC;AAED;IACA,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC;AAC9B,CAAC","sourcesContent":["import { LocaleService } from '../../services/locale.service';\r\nimport { Language } from './language';\nexport class LocaleConfig {\n/**\n * @param {?} locale\n */\nconstructor(private locale: LocaleService) { }\n/**\n * Adds a language to use in the app, specifying the layout direction.\r\\@param languageCode ISO 639 two-letter or three-letter code of the language\r\\@param textDirection Default is ltr (left to right)\n * @param {?} languageCode\n * @param {?=} textDirection\n * @return {?}\n */\npublic AddLanguage(languageCode: string, textDirection: string = \"LTR\"): LocaleConfig {\r\n        let /** @type {?} */ language: Language = { code: languageCode, direction: textDirection };\r\n        this.locale.configuration.languageCodes.push(language);\r\n        return this;\r\n    }\n/**\n * Adds the languages to use in the app.\r\\@param languageCodes Array of ISO 639 two-letter or three-letter codes of the languages\n * @param {?} languageCodes\n * @return {?}\n */\npublic AddLanguages(languageCodes: string[]): LocaleConfig {\r\n        for (let /** @type {?} */ languageCode of languageCodes) {\r\n            let /** @type {?} */ language: Language = { code: languageCode, direction: \"ltr\" };\r\n            this.locale.configuration.languageCodes.push(language);\r\n        }\r\n        return this;\r\n    }\n/**\n * Disables the browser storage for language, default locale & currency.\n * @return {?}\n */\npublic DisableStorage(): LocaleConfig {\r\n        this.locale.configuration.storageIsDisabled = true;\r\n        return this;\r\n    }\n/**\n * If the cookie expiration is omitted, the cookie becomes a session cookie.\n * @param {?=} days\n * @return {?}\n */\npublic SetCookieExpiration(days: number = null): LocaleConfig {\r\n        this.locale.configuration.cookiesExpirationDays = days;\r\n        return this;\r\n    }\n/**\n * Sets browser LocalStorage as default for language, default locale & currency.\n * @return {?}\n */\npublic UseLocalStorage(): LocaleConfig {\r\n        this.locale.configuration.localStorage = true;\r\n        return this;\r\n    }\n/**\n * Defines the language to be used:\r - tries to get the language from the browser storage;\r - tries to get the language of the browser if it has been added;\r - otherwise gets the parameter language.\r\\@param languageCode ISO 639 two-letter or three-letter code of the language\n * @param {?} languageCode\n * @return {?}\n */\npublic DefineLanguage(languageCode: string): LocaleConfig {\r\n        this.locale.configuration.languageCode = languageCode;\r\n        return this;\r\n    }\n/**\n * Defines the default locale to be used, regardless of the browser language.\r\\@param languageCode ISO 639 two-letter or three-letter code of the language\r\\@param countryCode ISO 3166 two-letter, uppercase code of the country\r\\@param scriptCode Optional ISO 15924 four-letter script code\r\\@param numberingSystem Optional numbering system\r\\@param calendar Optional calendar\n * @param {?} languageCode\n * @param {?} countryCode\n * @param {?=} scriptCode\n * @param {?=} numberingSystem\n * @param {?=} calendar\n * @return {?}\n */\npublic DefineDefaultLocale(\r\n        languageCode: string,\r\n        countryCode: string,\r\n        scriptCode?: string,\r\n        numberingSystem?: string,\r\n        calendar?: string\r\n    ): LocaleConfig {\r\n        this.locale.configuration.languageCode = languageCode;\r\n        this.locale.configuration.countryCode = countryCode;\r\n        this.locale.configuration.scriptCode = scriptCode;\r\n        this.locale.configuration.numberingSystem = numberingSystem;\r\n        this.locale.configuration.calendar = calendar;\r\n        return this;\r\n    }\n/**\n * Defines the currency to be used.\r\\@param defaultCurrency ISO 4217 three-letter code of the currency\n * @param {?} currencyCode\n * @return {?}\n */\npublic DefineCurrency(currencyCode: string): LocaleConfig {\r\n        this.locale.configuration.currencyCode = currencyCode;\r\n        return this;\r\n    }\r\n\r\n}\n\nfunction LocaleConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nLocaleConfig.prototype.locale;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}