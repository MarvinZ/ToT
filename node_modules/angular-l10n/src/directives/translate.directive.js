var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { Directive, ElementRef, Input, Renderer } from '@angular/core';
import { TranslationService } from '../services/translation.service';
import { BaseDirective } from '../models/utils/base-directive';
export var TranslateDirective = (function (_super) {
    __extends(TranslateDirective, _super);
    /**
     * @param {?} translation
     * @param {?} el
     * @param {?} renderer
     */
    function TranslateDirective(translation, el, renderer) {
        _super.call(this, el, renderer);
        this.translation = translation;
        this.el = el;
        this.renderer = renderer;
    }
    /**
     * @return {?}
     */
    TranslateDirective.prototype.setup = function () {
        var _this = this;
        this.replace();
        this.translation.translationChanged.subscribe(function () {
            _this.replace();
        });
    };
    /**
     * @return {?}
     */
    TranslateDirective.prototype.replace = function () {
        var _this = this;
        this.translation.translateAsync(this.key, this.params).subscribe(function (value) {
            _this.setText(value);
        });
    };
    TranslateDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[translate]'
                },] },
    ];
    /** @nocollapse */
    TranslateDirective.ctorParameters = function () { return [
        { type: TranslationService, },
        { type: ElementRef, },
        { type: Renderer, },
    ]; };
    TranslateDirective.propDecorators = {
        'params': [{ type: Input, args: ['translate',] },],
    };
    return TranslateDirective;
}(BaseDirective));
function TranslateDirective_tsickle_Closure_declarations() {
    /** @type {?} */
    TranslateDirective.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    TranslateDirective.ctorParameters;
    /** @type {?} */
    TranslateDirective.propDecorators;
    /** @type {?} */
    TranslateDirective.prototype.params;
    /** @type {?} */
    TranslateDirective.prototype.translation;
    /** @type {?} */
    TranslateDirective.prototype.el;
    /** @type {?} */
    TranslateDirective.prototype.renderer;
}
//# sourceMappingURL=translate.directive.js.map