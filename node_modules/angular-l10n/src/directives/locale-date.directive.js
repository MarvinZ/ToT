var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { Directive, ElementRef, Input, Renderer } from '@angular/core';
import { DatePipe } from '@angular/common';
import { LocaleService } from '../services/locale.service';
import { IntlAPI } from '../services/intl-api';
import { BaseDirective } from '../models/utils/base-directive';
export var LocaleDateDirective = (function (_super) {
    __extends(LocaleDateDirective, _super);
    /**
     * @param {?} locale
     * @param {?} el
     * @param {?} renderer
     */
    function LocaleDateDirective(locale, el, renderer) {
        _super.call(this, el, renderer);
        this.locale = locale;
        this.el = el;
        this.renderer = renderer;
        this.defaultPattern = 'mediumDate';
    }
    /**
     * @return {?}
     */
    LocaleDateDirective.prototype.setup = function () {
        var _this = this;
        this.replace();
        this.locale.defaultLocaleChanged.subscribe(function () {
            _this.replace();
        });
    };
    /**
     * @return {?}
     */
    LocaleDateDirective.prototype.replace = function () {
        if (IntlAPI.HasDateTimeFormat()) {
            var /** @type {?} */ localeDate = new DatePipe(this.locale.getDefaultLocale());
            var /** @type {?} */ value = localeDate.transform(this.key, this.pattern || this.defaultPattern);
            this.setText(value);
        }
    };
    LocaleDateDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[localeDate]'
                },] },
    ];
    /** @nocollapse */
    LocaleDateDirective.ctorParameters = function () { return [
        { type: LocaleService, },
        { type: ElementRef, },
        { type: Renderer, },
    ]; };
    LocaleDateDirective.propDecorators = {
        'pattern': [{ type: Input, args: ['localeDate',] },],
    };
    return LocaleDateDirective;
}(BaseDirective));
function LocaleDateDirective_tsickle_Closure_declarations() {
    /** @type {?} */
    LocaleDateDirective.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    LocaleDateDirective.ctorParameters;
    /** @type {?} */
    LocaleDateDirective.propDecorators;
    /** @type {?} */
    LocaleDateDirective.prototype.pattern;
    /** @type {?} */
    LocaleDateDirective.prototype.defaultPattern;
    /** @type {?} */
    LocaleDateDirective.prototype.locale;
    /** @type {?} */
    LocaleDateDirective.prototype.el;
    /** @type {?} */
    LocaleDateDirective.prototype.renderer;
}
//# sourceMappingURL=locale-date.directive.js.map